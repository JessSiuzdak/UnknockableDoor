// Analog Pins
const int Sensor = 0;         // Piezo sensor on pin 0.

//Digital Pins
const int Slideswitch = 2;       // Reprogramming Switch on Pin 2
const int unlockServo = 3;           // Servo on Pin 

//OPTIONAL Digital Pins
//const int GreenLED = 4;         //Accepting Green LED Pin 4
//const int RedLED = 5;           //Rejecting Red LED Pin 5

//Variables
int sensorValue = 0;    		//Variable dedicated to "hearing" a knock
int minthresholdvalue = 5;		//NEEDS TO BE DETERMINED THROUGH TESTING
int maxthresholdvalue = 100;		//NEEDS TO BE DETERMINED THROUGH TESTING
const int MotorRunTime = 240;		//Motor will run for 240 milliseconds
int noteDurations[] = 			//Reprogramming note durations
{8, 8, 8, 8, 8};				
int melody[] = {				//Reprogramming melody
  NOTE_F2, NOTE_F3, NOTE_F4, NOTE_F5, NOTE_F6
};
void setup()
{
	pinMode(unlockServo, OUTPUT);
	pinMode(SlideSwitch, INPUT);
}

void loop()
{
if (sensorValue = analogRead(Sensor))            //Read the value from the sensor
	if (digitalRead(Slideswitch == HIGH))		 //If the slideswitch is on
	{
		for (int thisNote = 0; thisNote < 5; thisNote++) //Play Reprogramming melody
		{
			int noteDuration = 1000 / noteDurations[thisNote];
			tone(8, melody[thisNote], noteDuration);
			int pauseBetweenNotes = noteDuration * 1.30;
			delay(pauseBetweenNotes);
			noTone(8);
		}
		reprogramming = true;					//Begin Reprogramming
	}
	else 
	{
		reprogramming = false				//otherwise DON'T reprogram
	}
	if ((sensorValue >= minthresholdvalue) && (sensorValue <=maxthreshold))			//if the knock is an acceptable decibel level
	{
		listenforcode();				//listen for the sequential knocks
	}
}

//Functions used in Main Code
void listenforcode()
{

// RUN the Servo
void TriggerServo()
{
  Serial.println("Door unlocked!");				//Prints the Line "Door unlocked"

  digitalWrite(unlockServo, HIGH);				//Turn on the servo			
  
  delay (MotorRunTime);                 			 //Runs the servo for the set time
  
  digitalWrite(unlockServo, LOW);            			// Turn the servo off.
   
}
